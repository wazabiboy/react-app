{"version":3,"sources":["components/Counter.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","handleChange","operation","a","console","log","newCount","state","count","setState","handerPlusApp","this","type","className","onClick","Component","Header","total","App","handerPlusAppInner","i","counters","reduce","accumulateur","valeur","map","counter","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAGMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAKVC,aANmB,uCAMJ,WAAOC,GAAP,eAAAC,EAAA,sDACXC,QAAQC,IAAIH,GACRI,EAAW,KAFJ,KAGHJ,EAHG,OAIF,SAJE,OAOF,UAPE,OAUF,SAVE,8BAKHI,EAAW,EAAKC,MAAMC,MAAQ,EAL3B,mCAQHF,EAAW,EAAKC,MAAMC,MAAQ,EAR3B,mCAWHF,EAAW,EAXR,6BAcHA,EAAW,EAdR,yBAkBL,EAAKG,SAAS,CAAED,MAAOF,IAlBlB,QAmBX,EAAKN,MAAMU,cAAc,EAAKH,MAAMC,OAnBzB,4CANI,sDAEf,EAAKD,MAAQ,CAAEC,MAAO,GAFP,E,0CA+BnB,WAAU,IAAD,OACL,OACI,qCAEI,+BAAOG,KAAKJ,MAAMC,QAFtB,IAEoC,uBAAM,uBACtC,wBAAQI,KAAK,SAASC,UAAU,kBAAkBC,QAAS,kBAAM,EAAKb,aAAa,SAAnF,iBAHJ,OAIQ,wBAAQW,KAAK,SAASC,UAAU,iBAAiBC,QAAS,kBAAM,EAAKb,aAAa,UAAlF,iBAJR,OAKQ,wBAAQW,KAAK,SAASC,UAAU,iBAAiBC,QAAS,kBAAM,EAAKb,aAAa,SAAlF,oBAEJ,uBAAM,8B,GAzCAc,aAgDPhB,IC/BAiB,G,wDAdV,WAAYhB,GAAQ,IAAD,8BAChB,cAAMA,IACDO,MAAO,GAFI,E,0CAKpB,WACI,OACI,yDACwBI,KAAKX,MAAMiB,a,GAT1BF,cC2CNG,E,kDAvCb,WAAYlB,GAAO,IAAD,8BAChB,cAAMA,IAITmB,mBAAqB,SAACX,EAAOY,GAC9BhB,QAAQC,IAAI,kBAAoBe,EAAG,SAAWZ,GAE9C,IAAIa,EAAW,EAAKd,MAAMc,SAC1BA,EAASD,GAAMZ,EACfJ,QAAQC,IAAIgB,GAEZ,EAAKZ,SAAS,CAACY,aAGf,IAAIJ,EAASI,EAASC,QAAO,SAACC,EAAcC,GAAf,OAA0BD,EAAeC,IAAS,GAE7E,EAAKf,SAAS,CAACQ,WAfb,EAAKV,MAAQ,CAACc,SAAW,CAAC,EAAE,EAAE,EAAG,GAAIJ,MAAO,GAF5B,E,0CAwBlB,WAAS,IAAD,OAEN,OACJ,qCACC,cAAC,EAAD,CAAQA,MAAON,KAAKJ,MAAMU,QAExBN,KAAKJ,MAAMc,SAASI,KAAI,SAAEC,EAASN,GAEtC,OAAO,cAAC,EAAD,CAAmBV,cAAe,SAACiB,GAAD,OAAW,EAAKR,mBAAmBQ,EAAOP,KAA5DA,a,GAlCLL,aCKHa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5545c774.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react'\n\nclass Counter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { count: 0 };\n\n    }\n\n    handleChange = async (operation) => {\n        console.log(operation);\n        let newCount = null;\n        switch (operation) {\n            case \"plus\":\n                newCount = this.state.count + 1;\n                break;\n            case \"moins\":\n                newCount = this.state.count - 1;\n                break;\n            case \"zero\":\n                newCount = 0;\n                break;\n            default:\n                newCount = 0;\n\n        }\n\n        await this.setState({ count: newCount });\n        this.props.handerPlusApp(this.state.count)\n    };\n\n\n\n\n    render() {\n        return (\n            <>\n\n                <span>{this.state.count}</span> <br /><br />\n                <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleChange(\"plus\")}> + </button>\n                ||  <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleChange(\"moins\")}> - </button>\n                ||  <button type=\"button\" className=\"btn btn-orange\" onClick={() => this.handleChange(\"zero\")}> Reset</button>\n\n                <br /><br />\n\n            </>\n        );\n    }\n}\n\nexport default Counter","\nimport React, { Component } from 'react'\n \n\n\nclass Header extends Component{\n     constructor(props) {\n        super(props);\n        this.state ={ }\n        \n    }\n    render() {\n        return(\n            <header>\n                Valeur du compter: {this.props.total}\n            </header>\n        );\n    }\n}\n\nexport default Header;","/* eslint-disable no-lone-blocks */\nimport React, {Component} from 'react';\nimport Counter from './components/Counter';\n//import Header from './components/Header';\nimport './App.css';\nimport Header from './components/Header';\n \nclass App extends Component{\n  // eslint-disable-next-line no-useless-constructor\n  constructor(props){\n    super(props);\n    this.state = {counters : [0,0,0, 0], total: 0}\n      }\n\n handerPlusAppInner = (count, i) => {\nconsole.log(\"Maj compteur n \"  +i ,\"valeur\" + count );\n//modifer lle tableau des compteur \nlet counters = this.state.counters;\ncounters[i] =  count ;\nconsole.log(counters)\n\nthis.setState({counters});\n\n\nlet total  = counters.reduce((accumulateur, valeur) => accumulateur + valeur , 0);{\n\n  this.setState({total});\n\n};\n \n \n}\n\n  render(){\n    \n    return(\n<>\n <Header total={this.state.total}/>\n {\n   this.state.counters.map(( counter, i) => {\n\nreturn <Counter key = {i} handerPlusApp={(value) => this.handerPlusAppInner(value, i)}/>\n   })\n }\n</>  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}